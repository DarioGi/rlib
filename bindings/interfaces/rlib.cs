//------------------------------------------------------------------------------
// <auto-generated />
//
// This file was automatically generated by SWIG (http://www.swig.org).
// Version 3.0.8
//
// Do not make changes to this file unless you know what you are doing--modify
// the SWIG interface file instead.
//------------------------------------------------------------------------------


public class rlib {
  public static SWIGTYPE_p_rlib rlib_init() {
    global::System.IntPtr cPtr = rlibPINVOKE.rlib_init();
    SWIGTYPE_p_rlib ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_rlib(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_datasource_mysql(SWIGTYPE_p_rlib r, string input_name, string database_host, string database_user, string database_password, string database_database) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_datasource_mysql(SWIGTYPE_p_rlib.getCPtr(r), input_name, database_host, database_user, database_password, database_database), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_datasource_postgres(SWIGTYPE_p_rlib r, string input_name, string conn) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_datasource_postgres(SWIGTYPE_p_rlib.getCPtr(r), input_name, conn), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_datasource_odbc(SWIGTYPE_p_rlib r, string input_name, string source, string user, string password) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_datasource_odbc(SWIGTYPE_p_rlib.getCPtr(r), input_name, source, user, password), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_datasource_xml(SWIGTYPE_p_rlib r, string input_name) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_datasource_xml(SWIGTYPE_p_rlib.getCPtr(r), input_name), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_datasource_csv(SWIGTYPE_p_rlib r, string input_name) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_datasource_csv(SWIGTYPE_p_rlib.getCPtr(r), input_name), true);
    return ret;
  }

  public static SWIGTYPE_p_gint rlib_add_query_as(SWIGTYPE_p_rlib r, string input_source, string sql, string name) {
    SWIGTYPE_p_gint ret = new SWIGTYPE_p_gint(rlibPINVOKE.rlib_add_query_as(SWIGTYPE_p_rlib.getCPtr(r), input_source, sql, name), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_search_path(SWIGTYPE_p_rlib r, string path) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_search_path(SWIGTYPE_p_rlib.getCPtr(r), path), true);
    return ret;
  }

  public static int rlib_add_report(SWIGTYPE_p_rlib r, string name) {
    int ret = rlibPINVOKE.rlib_add_report(SWIGTYPE_p_rlib.getCPtr(r), name);
    return ret;
  }

  public static int rlib_add_report_from_buffer(SWIGTYPE_p_rlib r, string buffer) {
    int ret = rlibPINVOKE.rlib_add_report_from_buffer(SWIGTYPE_p_rlib.getCPtr(r), buffer);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_execute(SWIGTYPE_p_rlib r) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_execute(SWIGTYPE_p_rlib.getCPtr(r)), true);
    return ret;
  }

  public static string rlib_get_content_type_as_text(SWIGTYPE_p_rlib r) {
    string ret = rlibPINVOKE.rlib_get_content_type_as_text(SWIGTYPE_p_rlib.getCPtr(r));
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_spool(SWIGTYPE_p_rlib r) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_spool(SWIGTYPE_p_rlib.getCPtr(r)), true);
    return ret;
  }

  public static void rlib_set_output_format(SWIGTYPE_p_rlib r, int format) {
    rlibPINVOKE.rlib_set_output_format(SWIGTYPE_p_rlib.getCPtr(r), format);
  }

  public static void rlib_set_output_format_from_text(SWIGTYPE_p_rlib r, string name) {
    rlibPINVOKE.rlib_set_output_format_from_text(SWIGTYPE_p_rlib.getCPtr(r), name);
  }

  public static SWIGTYPE_p_gboolean rlib_add_resultset_follower_n_to_1(SWIGTYPE_p_rlib r, string leader, string leader_field, string follower, string follower_field) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_resultset_follower_n_to_1(SWIGTYPE_p_rlib.getCPtr(r), leader, leader_field, follower, follower_field), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_resultset_follower(SWIGTYPE_p_rlib r, string leader, string follower) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_resultset_follower(SWIGTYPE_p_rlib.getCPtr(r), leader, follower), true);
    return ret;
  }

  public static SWIGTYPE_p_gchar rlib_get_output(SWIGTYPE_p_rlib r) {
    global::System.IntPtr cPtr = rlibPINVOKE.rlib_get_output(SWIGTYPE_p_rlib.getCPtr(r));
    SWIGTYPE_p_gchar ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_gchar(cPtr, false);
    return ret;
  }

  public static SWIGTYPE_p_gsize rlib_get_output_length(SWIGTYPE_p_rlib r) {
    SWIGTYPE_p_gsize ret = new SWIGTYPE_p_gsize(rlibPINVOKE.rlib_get_output_length(SWIGTYPE_p_rlib.getCPtr(r)), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_signal_connect(SWIGTYPE_p_rlib r, int signal_number, SWIGTYPE_p_f_p_rlib_p_void__int signal_function, SWIGTYPE_p_void data) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_signal_connect(SWIGTYPE_p_rlib.getCPtr(r), signal_number, SWIGTYPE_p_f_p_rlib_p_void__int.getCPtr(signal_function), SWIGTYPE_p_void.getCPtr(data)), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_signal_connect_string(SWIGTYPE_p_rlib r, string signal_name, SWIGTYPE_p_f_p_rlib_p_void__int signal_function, SWIGTYPE_p_void data) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_signal_connect_string(SWIGTYPE_p_rlib.getCPtr(r), signal_name, SWIGTYPE_p_f_p_rlib_p_void__int.getCPtr(signal_function), SWIGTYPE_p_void.getCPtr(data)), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_query_refresh(SWIGTYPE_p_rlib r) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_query_refresh(SWIGTYPE_p_rlib.getCPtr(r)), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_add_parameter(SWIGTYPE_p_rlib r, string name, string value) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_add_parameter(SWIGTYPE_p_rlib.getCPtr(r), name, value), true);
    return ret;
  }

  public static void rlib_set_locale(SWIGTYPE_p_rlib r, string locale) {
    rlibPINVOKE.rlib_set_locale(SWIGTYPE_p_rlib.getCPtr(r), locale);
  }

  public static SWIGTYPE_p_gchar rlib_bindtextdomain(SWIGTYPE_p_rlib r, string domainname, string dirname) {
    global::System.IntPtr cPtr = rlibPINVOKE.rlib_bindtextdomain(SWIGTYPE_p_rlib.getCPtr(r), domainname, dirname);
    SWIGTYPE_p_gchar ret = (cPtr == global::System.IntPtr.Zero) ? null : new SWIGTYPE_p_gchar(cPtr, false);
    return ret;
  }

  public static void rlib_set_radix_character(SWIGTYPE_p_rlib r, SWIGTYPE_p_gchar radix_character) {
    rlibPINVOKE.rlib_set_radix_character(SWIGTYPE_p_rlib.getCPtr(r), SWIGTYPE_p_gchar.getCPtr(radix_character));
    if (rlibPINVOKE.SWIGPendingException.Pending) throw rlibPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void rlib_set_output_parameter(SWIGTYPE_p_rlib r, string parameter, string value) {
    rlibPINVOKE.rlib_set_output_parameter(SWIGTYPE_p_rlib.getCPtr(r), parameter, value);
  }

  public static void rlib_set_output_encoding(SWIGTYPE_p_rlib r, string encoding) {
    rlibPINVOKE.rlib_set_output_encoding(SWIGTYPE_p_rlib.getCPtr(r), encoding);
  }

  public static SWIGTYPE_p_gboolean rlib_set_datasource_encoding(SWIGTYPE_p_rlib r, string input_name, string encoding) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_set_datasource_encoding(SWIGTYPE_p_rlib.getCPtr(r), input_name, encoding), true);
    return ret;
  }

  public static void rlib_free(SWIGTYPE_p_rlib r) {
    rlibPINVOKE.rlib_free(SWIGTYPE_p_rlib.getCPtr(r));
  }

  public static string rlib_version() {
    string ret = rlibPINVOKE.rlib_version();
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_graph_add_bg_region(SWIGTYPE_p_rlib r, string graph_name, string region_label, string color, double start, double end) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_graph_add_bg_region(SWIGTYPE_p_rlib.getCPtr(r), graph_name, region_label, color, start, end), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_graph_clear_bg_region(SWIGTYPE_p_rlib r, string graph_name) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_graph_clear_bg_region(SWIGTYPE_p_rlib.getCPtr(r), graph_name), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_graph_set_x_minor_tick(SWIGTYPE_p_rlib r, string graph_name, string x_value) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_graph_set_x_minor_tick(SWIGTYPE_p_rlib.getCPtr(r), graph_name, x_value), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_graph_set_x_minor_tick_by_location(SWIGTYPE_p_rlib r, string graph_name, int location) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_graph_set_x_minor_tick_by_location(SWIGTYPE_p_rlib.getCPtr(r), graph_name, location), true);
    return ret;
  }

  public static SWIGTYPE_p_gdouble rlib_graph(SWIGTYPE_p_rlib r, SWIGTYPE_p_rlib_part part, SWIGTYPE_p_rlib_report report, double left_margin_offset, SWIGTYPE_p_double top_margin_offset) {
    SWIGTYPE_p_gdouble ret = new SWIGTYPE_p_gdouble(rlibPINVOKE.rlib_graph(SWIGTYPE_p_rlib.getCPtr(r), SWIGTYPE_p_rlib_part.getCPtr(part), SWIGTYPE_p_rlib_report.getCPtr(report), left_margin_offset, SWIGTYPE_p_double.getCPtr(top_margin_offset)), true);
    return ret;
  }

  public static SWIGTYPE_p_gboolean rlib_parse(SWIGTYPE_p_rlib r) {
    SWIGTYPE_p_gboolean ret = new SWIGTYPE_p_gboolean(rlibPINVOKE.rlib_parse(SWIGTYPE_p_rlib.getCPtr(r)), true);
    return ret;
  }

  public static void rlib_set_query_cache_size(SWIGTYPE_p_rlib r, int cache_size) {
    rlibPINVOKE.rlib_set_query_cache_size(SWIGTYPE_p_rlib.getCPtr(r), cache_size);
  }

}
