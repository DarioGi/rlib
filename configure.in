dnl Configure template for RLIB

dnl Copyright (c) 2003 SICOM Systems Inc (bdoan@sicompos.com)
dnl RLIB is free software; you can redistribute it and/or modify
dnl it under the terms of the GNU General Public License as published by
dnl the Free Software Foundation; either version 2, or (at your option)
dnl any later version.

dnl RLIB is distributed in the hope that it will be useful,
dnl but WITHOUT ANY WARRANTY; without even the implied warranty of
dnl MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
dnl GNU General Public License for more details.

dnl You should have received a copy of the GNU General Public License
dnl along with this program; if not, write to the Free Software
dnl Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA
dnl 02111-1307, USA.

dnl Report bugs to rlib-devel@lists.sourceforge.net
dnl
dnl Process this file with autoconf to produce a configure script.


AC_INIT(libsrc/rlib.h)
AM_INIT_AUTOMAKE(rlib, 1.2.1)
AM_MAINTAINER_MODE
AC_DISABLE_STATIC
RLIB_VERSION=1.2.1
AC_SUBST(RLIB_VERSION)

dnl Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
AC_PROG_INSTALL

AC_LIBTOOL_DLOPEN
AC_LIBLTDL_CONVENIENCE
AC_PROG_LIBTOOL
AC_SUBST(INCLTDL)
AC_SUBST(LIBLTDL)

dnl Checks for libraries.
AC_CHECK_LIB(c, exit)
AC_CHECK_LIB(m, exp)

AC_PATH_PROG(PKG_CONFIG, pkg-config, no)

PKG_CHECK_MODULES(LIBXML, libxml-2.0 >= 2.6.0)
AC_SUBST(LIBXML_LIBS)
AC_SUBST(LIBXML_CFLAGS)

PKG_CHECK_MODULES(LIBGLIB, glib-2.0 >= 0.0.1)
AC_SUBST(LIBGLIB_LIBS)
AC_SUBST(LIBGLIB_CFLAGS)

PKG_CHECK_MODULES(LIBGMODULE, gmodule-2.0 >= 0.0.1)
AC_SUBST(LIBGMODULE_LIBS)
AC_SUBST(LIBGMODULE_CFLAGS)

AC_ARG_ENABLE(mysql,              [  --disable-mysql         disable mysql backend],,enable_mysql=yes)
MYSQL_CFLAGS=""
MYSQL_LIBS=""
if test x$enable_mysql = xyes; then
	AC_PATH_PROG(MYSQL_CONFIG, mysql_config, no)
	if test x$MYSQL_CONFIG = xno; then
		echo "*** WARNING: MYSQL NOT FOUND IN PATH.  RLIB WILL NOT BE COMPILED WITH SUPPORT FOR IT"
		enable_mysql=no	
	else
		AC_DEFINE(HAVE_MYSQL,1,[Build with MYSQL support])
		MYSQL_CFLAGS=`$MYSQL_CONFIG --cflags`
		MYSQL_LIBS=`$MYSQL_CONFIG --libs`
	fi
fi
AC_SUBST(MYSQL_CFLAGS)
AC_SUBST(MYSQL_LIBS)
AM_CONDITIONAL(HAVE_MYSQL, test x$enable_mysql = xyes)

AC_ARG_ENABLE(postgre,              [  --disable-postgre       disable postgre backend],,enable_postgre=yes)
POSTGRE_CFLAGS=""
POSTGRE_LIBS=""
if test x$enable_postgre = xyes; then
	AC_PATH_PROG(POSTGRE_CONFIG, pg_config, no)
	if test x$POSTGRE_CONFIG = xno; then
		echo "*** WARNING: POSTGRE NOT FOUND IN PATH.  RLIB WILL NOT BE COMPILED WITH SUPPORT FOR IT"
		enable_postgre=no
	else
		AC_DEFINE(HAVE_POSTGRE,1,[Build with POSTGRE support])
		POSTGRE_CFLAGS="-I `$POSTGRE_CONFIG --includedir`"
		POSTGRE_LIBS="-L`$POSTGRE_CONFIG --libdir` -lpq"
	fi
fi
AC_SUBST(POSTGRE_CFLAGS)
AC_SUBST(POSTGRE_LIBS)
AM_CONDITIONAL(HAVE_POSTGRE, test x$enable_postgre = xyes)

dnl .. ODBC checking borrowed from libgda
ODBC_CFLAGS=""
ODBC_LIBS=""
enable_odbc=yes
AC_ARG_WITH(odbc,
[  --with-odbc=<directory>	use ODBC libraries in <directory>],[
if test $withval = no
then
	enable_odbc=false
elif test $withval = yes
then
	dir="/usr/local"
else
	dir=$withval
fi
])
odbcdir=""
if test $enable_odbc = yes
then
	AC_MSG_CHECKING(for ODBC files)
	for d in $dir /usr /usr/local
	do
		if test -f $d/lib/libodbc.so -a -f $d/include/sql.h
		then
			AC_MSG_RESULT(found ODBC in $d)
			odbclib="-lodbc"
			odbcdir=$d
			break
		fi
		if test -f $d/lib/libiodbc.so -a -f $d/include/sql.h
		then
			AC_MSG_RESULT(found iODBC in $d)
			odbclib="-liodbc"
			odbcdir=$d
			break
		fi
	done
	if test x$odbcdir = x
	then
		enable_odbc=no
		AC_MSG_WARN(ODBC input method is not going to be used)
	else
		AC_DEFINE(HAVE_ODBC,1,[Build with ODBC support])
		ODBC_CFLAGS="-I${odbcdir}/include"
		ODBC_LIBS="-L${odbcdir}/lib ${odbclib}"
	fi
fi
AM_CONDITIONAL(HAVE_ODBC, test x$enable_odbc = xyes)
AC_SUBST(ODBC_CFLAGS)
AC_SUBST(ODBC_LIBS)


AC_ARG_ENABLE(php,              [  --disable-php         disable php frontend],,enable_php=yes)
PHP_CFLAGS=""
PHP_EXTENSION_DIR=""
if test x$enable_php = xyes; then
	AC_PATH_PROG(PHP_CONFIG, php-config, no)
	if test x$PHP_CONFIG = xno; then
		enable_php=no
		echo "*** WARNING: PHP NOT FOUND IN PATH.  RLIB WILL NOT BE COMPILED WITH SUPPORT FOR IT"
	else
		AC_DEFINE(HAVE_PHP,1,[Build with PHP support])
		PHP_CFLAGS=`$PHP_CONFIG --includes`
		PHP_EXTENSION_DIR=`$PHP_CONFIG --extension-dir`
	fi
fi
AC_SUBST(PHP_CFLAGS)
AC_SUBST(PHP_EXTENSION_DIR)
AC_SUBST(HAVE_PHP)
AM_CONDITIONAL(HAVE_PHP, test x$enable_php = xyes)

python_version=2.2
AC_ARG_WITH(pythonver,
[  --with-pythonver	Set Python Version Number.. 2.0, 2.1, 2.2, 2.3..],[python_version=$withval])

AC_ARG_ENABLE(python,              [  --disable-python      disable python frontend],,enable_python=yes)
PYTHON_CFLAGS=""
PYTHON_EXTENSION_DIR=""
if test x$enable_python = xyes; then
echo "TEST 1"
	AM_PATH_PYTHON($python_version)
echo "TEST 2"
	if test x$PYTHON_VERSION = x$python_version; then
		AC_DEFINE(HAVE_PYTHON,1,[Build with PYTHON support])
		PYTHON_CFLAGS="-I $PYTHON_PREFIX/include/python$PYTHON_VERSION"
echo "$PYTHON_CFLAGS"
		PYTHON_EXTENSION_DIR=$pyexecdir
	else
		enable_python=no
		echo "*** WARNING: PYTHON ${python_version} NOT FOUND IN PATH.  RLIB WILL NOT BE COMPILED WITH SUPPORT FOR IT"
	fi
fi
AC_SUBST(HAVE_PYTHON)
AC_SUBST(PYTHON_CFLAGS)
AC_SUBST(PYTHON_EXTENSION_DIR)
AM_CONDITIONAL(HAVE_PYTHON, test x$enable_python = xyes)

enable_java=no
JAVA_CFLAGS=""
AC_ARG_WITH(java,
[  --with-java=<directory>	use JAVA in <directory>],[
if test $withval = no
then
	enable_java=false
elif test $withval = yes
then
	dir="/usr/local"
else
	dir=$withval
	enable_java=yes
fi
])
javadir=""
if test $enable_java = yes
then
	AC_MSG_CHECKING(for JAVA files)
	for d in $dir /usr /usr/local
	do
		if test -f $d/include/jni.h
		then
			AC_MSG_RESULT(found JAVA in $d)
			javadir=$d
			break
		fi
	done
	if test x$javadir = x
	then
		enable_java=no
		AC_MSG_WARN(JAVA bindings are not going to be used)
	else
		AC_DEFINE(HAVE_JAVA,1,[Build with JAVA support])
		JAVA_CFLAGS="-I${javadir}/include -I${javadir}/include/linux"
	fi
fi
AM_CONDITIONAL(HAVE_JAVA, test x$enable_java = xyes)
AC_SUBST(JAVA_CFLAGS)




enable_perl=yes
PERL_CFLAGS=""
AC_ARG_WITH(perlinclude,
[  --with-perl-include=<directory> PERL INCLUDE DIRECTORY in <directory>],[
if test $withval = no
then
	enable_perl=false
elif test $withval = yes
then
	dir="/usr/local"
else
	dir=$withval
fi
])
AC_ARG_WITH(perlmodule,
[  --with-perl-module=<directory> PERL MODULES GOES in <directory>],[
if test $withval = no
then
	enable_perl=false
elif test $withval = yes
then
	dirm="/usr/local"
else
	dirm=$withval
fi
])
PERL_EXTENSTION_DIR="/usr/local"
perldir=""
if test $enable_perl = yes
then
	AC_MSG_CHECKING(for PERL files)
	for d in $dir /usr /usr/local
	do
		if test -f $d/perl.h
		then
			AC_MSG_RESULT(found PERL in $d)
			PERL_EXTENSION_DIR=$dir2
			perldir=$d
			break
		fi
	done
	if test x$perldir = x
	then
		enable_perl=no
		AC_MSG_WARN(PERL bindings are not going to be used)
	else
		AC_DEFINE(HAVE_PERL,1,[Build with PERL support])
		PERL_CFLAGS="-I${perldir}"
	fi
fi
AM_CONDITIONAL(HAVE_PERL, test x$enable_perl = xyes)
AC_SUBST(PERL_CFLAGS)
AC_SUBST(PERL_EXTENSION_DIR)

dnl check for iconv.h
AC_CHECK_HEADERS(iconv.h,,AC_MSG_ERROR(cannot find iconf.h))

dnl if we have iconv library, we have to decide if it
dnl is present in libc
AC_CHECK_FUNCS(iconv_open, iconv_in_libc=1, iconv_in_libc=0)
AC_CHECK_LIB(iconv, iconv_open, iconv_in_iconv=1, iconv_in_iconv=0)
AC_CHECK_LIB(iconv, libiconv_open, libiconv_in_iconv=1,libiconv_in_iconv=0)

dnl standalone library rules over libc
AC_MSG_CHECKING(where to find iconv_open)
if test $iconv_in_iconv = 1 -o $libiconv_in_iconv = 1; then
        AC_MSG_RESULT(libiconv)
        ICONVLIBS=" -liconv"
elif test $iconv_in_libc = 1; then
        AC_MSG_RESULT(libc)
else
        AC_MSG_RESULT(not found (panic))
        AC_MSG_ERROR([iconv.h found, while iconv library not found])
fi


AC_MSG_CHECKING(whether iconv takes const char ** or char **)
AC_TRY_COMPILE([#include <iconv.h>],[
{
size_t iconv (iconv_t a, const char ** b, size_t *c, char **d, size_t *e);
}],
iconv_oldstyle=1, iconv_oldstyle=0)
if test $iconv_oldstyle = 1; then
        AC_MSG_RESULT(const char **)
        AC_DEFINE(ICONV_CONST_CHAR_PP, [1], [ICONV Pointer Test])
else

        AC_MSG_RESULT(char **)
        AC_DEFINE(ICONV_CONST_CHAR_PP, [0], [ICONV Pointer Test])
fi


AC_MSG_CHECKING(whether iconv takes ISO8859-1 or ISO-8859-1)
AC_RUN_IFELSE(
        [
        #include <iconv.h>

        int
        main(void) {
                iconv_open("ISO-8859-1","UTF-8");
                if (errno)
                        return -1;

                return 0;
        }
        ],
        AC_MSG_RESULT(ISO-8859-1)
        AC_DEFINE(ICONV_ISO,["ISO-8859-1"], [ICONV Check]),
        AC_MSG_RESULT(ISO8859-1)
        AC_DEFINE(ICONV_ISO,["ISO8859-1"], [ICONV Check])
)

RLIB_WARNINGS=""
AC_ARG_ENABLE(warningfun,              [  --enable-warningfun       enable more gcc warning flags],enable_warningfun="$enableval",enable_warningfun=no)
if test x$enable_warningfun = xyes; then
	RLIB_WARNINGS="-Wall -Werror -Wchar-subscripts"
fi
AC_SUBST(RLIB_WARNINGS)

AC_ARG_ENABLE(cpdf,              [  --disable-cpdf         disable cpdf output],,enable_cpdf=yes)
CPDF_LIBS=""
if test x$enable_cpdf = xyes; then
	AC_CHECK_HEADER([cpdflib.h],
		[AC_DEFINE([HAVE_CPDFLIB_H], [], [CPDF Header])],
		[AC_MSG_ERROR([You must have cpdflib properly installed in order for rlib to work.. missing cpdflib.h])])
	AC_CHECK_LIB(cpdf, cpdf_init, [], [AC_MSG_ERROR([You must have cpdflib properly installed in order for rlib to work.. missing libcpdf.so])])
	CPDF_LIBS="-lcpdf"
fi

AC_SUBST(CPDF_LIBS)
AM_CONDITIONAL(ENABLE_CPDF, test x$enable_cpdf = xyes)

RLIB_CFLAGS="$LIBXML_CFLAGS $LIBGLIB_CFLAGS $LIBGMODULE_CFLAGS $MYSQL_CFLAGS $POSTGRE_CFLAGS $ODBC_CFLAGS $PHP_CFLAGS $PYTHON_CFLAGS $JAVA_CFLAGS $PERL_CFLAGS $RLIB_WARNINGS"
RLIB_LIBS="$LIBXML_LIBS $LIBGLIB_LIBS $LIBGMODULE_LIBS $MYSQL_LIBS $POSTGRE_LIBS $ODBC_LIBS $ICONVLIBS $CPDF_LIBS"
AC_SUBST(RLIB_CFLAGS)
AC_SUBST(RLIB_LIBS)

dnl Checks for header files.
AC_HEADER_STDC
AC_CHECK_HEADERS(fcntl.h unistd.h)
AC_C_CONST

AC_ARG_ENABLE(memdebug,              [  --enable-memdebug       enable memory debugging],enable_memdebug="$enableval",enable_memdebug=no)
if test x$enable_memdebug = xyes; then
	AC_DEFINE(DEBUG_RLIB_MEMORY,1,[Debug RLIB memory usage])
fi

AC_ARG_ENABLE(crash,              [  --disable-crash       disable crash detection],enable_memdebug="$enableval",enable_crash=yes)
if test x$enable_crash = xyes; then
	AC_DEFINE(ENABLE_CRASH,1,[ENABLE CRASH DETECTION])
fi

AC_ARG_ENABLE(utf8,              [  --disable-utf8       disable utf8],enable_utf8=yes,enable_utf8=no)
if test x$enable_utf8 = xyes; then
	AC_DEFINE(DISABLE_UTF8,1,[DISABLE UTF8])
fi

AM_CONFIG_HEADER(config.h)

AC_OUTPUT([
Makefile
rlib.pc
libsrc/Makefile
src/Makefile
src/examples/Makefile
src/examples/common/Makefile
src/examples/c/Makefile
src/examples/php/Makefile
src/examples/python/Makefile
src/examples/java/Makefile
bindings/Makefile
bindings/php/Makefile
bindings/python/Makefile
bindings/perl/Makefile
bindings/java/Makefile
bindings/interfaces/Makefile
inputs/Makefile
inputs/mysql/Makefile
inputs/odbc/Makefile
inputs/postgre/Makefile
tests/Makefile
])


echo "
rlib-$VERSION:

	prefix:                   ${prefix}
	compiler:                 ${CC}
	Memory debugging:         ${enable_memdebug}
	Warning Fun:              ${enable_warningfun}
	Crash detection:          ${enable_crash}
	UTF8 disabled:            ${enable_utf8}

	INPUTS:
	 MYSQL:                   ${enable_mysql}
	 POSTGRE:                 ${enable_postgre}
	 ODBC:                    ${enable_odbc}

   OUTPUTS:
	 PDF:                     ${enable_cpdf}
	 HTML:                    Always
	 CSV:                     Always
	 TEXT:                    Always
	 
	BINDINGS:
	 PHP:                     ${enable_php}
	  PHP entension dir:      ${PHP_EXTENSION_DIR}
	 PYTHON:                  ${enable_python}
	  PYTHON version:         ${python_version}
	  PYTHON entension dir:   ${PYTHON_EXTENSION_DIR}
	 JAVA:                    ${enable_java}
	 PERL:                    ${enable_perl}
	  PERL entension dir:     ${PERL_EXTENSION_DIR}

	Music:                    Incubus

	Having Problems:          rlib-users@lists.sf.net 	
	Want to contribute:       rlib-devel@lists.sf.net	
"
